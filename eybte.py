#!/usr/bin/env python
#old name: elementi yada bileÅŸiÄŸi tahmin et.py

from random import randint as ri

puan, soru = (0,0)

evet = True
hayÄ±r = False

sor = evet #oyun modunu sormasÄ± iÃ§in

sembolik = ['H','He','Li','Be','B','C','N','O','F','Ne','Na','Mg','Al','Si','P','S','Cl','Ar','K','Ca','Cr','Mn','Fe','Co','Ni','Cu','Zn','Br','Ag','Sn','I','Ba','Pt','Au','Hg','Pb']
sembolik_yaygÄ±n = ['hidrojen','helyum','lityum','berilyum','bor','karbon','azot / nitrojen','oksijen','flor','neon','sodyum','magnezyum','alÃ¼minyum','silisyum','fosfor','kÃ¼kÃ¼rt','klor','argon','potasyum','kalsiyum','krom','mangan','demir','kobalt','nikel','bakÄ±r','Ã§inko','brom','gÃ¼mÃ¼ÅŸ','kalay','iyot','baryum','platin','altÄ±n','cÄ±va / civa','kurÅŸun']

bileÅŸik = ['H2O','HCl','H2SO4','HNO3','CH3COOH','CaCO3','NaHCO3','NH3','Ca(OH)2','NaOH','KOH','CaO','NaCl']
bileÅŸik_yaygÄ±n = ['su','tuz ruhu / hidroklorik asit','zaÃ§ yaÄŸÄ± / sÃ¼lfÃ¼rik asit','kezzap / nitrik asit','asetik asit / sirke asidi / sirke ruhu','kireÃ§ taÅŸÄ±','yemek sodasÄ± / sodyum bikarbonat / kabartma tozu','amonyak','sÃ¶nmÃ¼ÅŸ kireÃ§ / kalsiyum hidroksit','sud kostik / sodyum hidroksit','potas kostik / potasyum hidroksit / potasyum hidrat','sÃ¶nmemiÅŸ kireÃ§ / kalsiyum oksit','yemek tuzu / sodyum klorÃ¼r / sofra tuzu / tuz']

bileÅŸik_bitti, sembolik_bitti = (False, False)

soru_tÃ¼rÃ¼ = "random"
soru_tÃ¼rÃ¼_aÃ§Ä±klamasÄ± ="""3 soru tÃ¼rÃ¼ var, bu soru tÃ¼rleri;
random\t = altdakkilerden birini sorar (her seferinde deÄŸiÅŸir)
sembolik = sembollerden sorar (C, O, H gibi)
bileÅŸik\t = bileÅŸiklerden sorar (H2O gibi)
hangisini seÃ§iyorsun?
"""

soru_sÄ±ralamasÄ± = "random"
soru_sÄ±ralamasÄ±_aÃ§Ä±klamasÄ± = """3 soru sÄ±ralamasÄ± var, bu soru sÄ±ralamalarÄ±;
random\t = altdakilerden birini yapar (her seferinde deÄŸiÅŸir)
yaygÄ±n\t = yaygÄ±n sorup sembolik halini cevap olarak ister ("hidroklorik asit" cevap:HCI gibi)
sembolik = sembolik sorup yaygÄ±n halini cevap olarak ister(HCI cevap:"hidroklorik asit" gibi)
hangisini seÃ§iyorsun?
"""

def init():
	global bileÅŸik_bitti,sembolik_bitti
	if soru_tÃ¼rÃ¼ == "sembolik": bileÅŸik_bitti = True
	if soru_tÃ¼rÃ¼ == "bileÅŸik":  sembolik_bitti = True

def str_to_list(string):
	return string.split(sep=None, maxsplit=0)

def soru_turu_sor():
	global soru_tÃ¼rÃ¼
	print(soru_tÃ¼rÃ¼_aÃ§Ä±klamasÄ±, end="")
	while True:
		user_cevap = input("$ ").casefold()
		
		if user_cevap == "random" or user_cevap == "sembolik" or user_cevap == "bileÅŸik":
			soru_tÃ¼rÃ¼ = user_cevap
			break
		elif f"{user_cevap}" == '':
			print(f"bir ÅŸey yazÄ±lmadÄ±, default olarak soru tÃ¼rÃ¼ \"{soru_tÃ¼rÃ¼}\" olarak seÃ§ildi\n")
			break
		else: print(f"\"{user_cevap}\" bir soru tÃ¼rÃ¼ deÄŸil, sadece \"random\", \"sembolik\" ve \"bileÅŸik\" yazmanÄ±z lazÄ±m.")

def soru_siralamasi_sor():
	global soru_sÄ±ralamasÄ±
	print(soru_sÄ±ralamasÄ±_aÃ§Ä±klamasÄ±, end="")
	while True:
		user_cevap = input("$ ").casefold()
		
		if user_cevap == "random" or user_cevap == "yaygÄ±n" or user_cevap == "sembolik":
			soru_sÄ±ralamasÄ± = user_cevap
			break
		elif f"{user_cevap}" == '':
			print(f"bir ÅŸey yazÄ±lmadÄ±, default olarak soru tÃ¼rÃ¼ \"{soru_sÄ±ralamasÄ±}\" olarak seÃ§ildi\n")
			break
		else: print(f"\"{user_cevap}\" bir soru sÄ±ralamasÄ± deÄŸil, sadece \"random\", \"yaygÄ±n\" veya \"sembolik\" yazmanÄ±z lazÄ±m.")

def tahmin(yaygÄ±n_adÄ±,sembolik_formÃ¼lÃ¼):
	global puan, soru
	if soru_sÄ±ralamasÄ± == "random":
		random_int = ri(0,1)
		if random_int == 0:
			baÅŸlÄ±k = yaygÄ±n_adÄ±
			cevap = sembolik_formÃ¼lÃ¼
		if random_int == 1:
			baÅŸlÄ±k = sembolik_formÃ¼lÃ¼
			cevap = yaygÄ±n_adÄ±
	elif soru_sÄ±ralamasÄ± == "yaygÄ±n":
		baÅŸlÄ±k = yaygÄ±n_adÄ±
		cevap = sembolik_formÃ¼lÃ¼
	elif soru_sÄ±ralamasÄ± == "sembolik":
		baÅŸlÄ±k = sembolik_formÃ¼lÃ¼
		cevap = yaygÄ±n_adÄ±
	else:
		print(f"\"{soru_sÄ±ralamasÄ±}\" diye bir soru sÄ±ralamasÄ± bulunamadÄ±. geÃ§erli soru sÄ±ralamalarÄ±: random, yaygÄ±n, sembolik (hepsinin aÃ§Ä±klamasÄ± kaynak kodda)")
		exit(1)
	
	if ' / ' in cevap: cevap = cevap.split(' / ')
	if not isinstance(cevap,list): cevap = str_to_list(cevap)

	soru += 1
	user_cevap = input(f"puanÄ±n: {puan}\n{soru}) {baÅŸlÄ±k}\n$ ") or 'n'
	
	if user_cevap in cevap:
		print("afferim, doÄŸru cevap! (+10 puan)")
		puan += 10
		return True
	elif user_cevap.casefold() in ["exit","Ã§Ä±k","Ã§Ä±kÄ±ÅŸ"]:
		print("oynadÄ±ÄŸÄ±n iÃ§in teÅŸekkÃ¼r ederim, gÃ¶rÃ¼ÅŸÃ¼rÃ¼z. ğŸ‘‹")
		exit(0)
	elif puan <= 0:
		print("Ã¼zgÃ¼nÃ¼m, yanlÄ±ÅŸ cevap.")
		return False
	else:
		print("Ã¼zgÃ¼nÃ¼m, yanlÄ±ÅŸ cevap (-5 puan)")
		puan -= 5
		return False

def oyunu_baslat():
	global bileÅŸik_bitti,sembolik_bitti
	while True:
		if len(sembolik_yaygÄ±n) <= 0: sembolik_bitti = True
		if len(bileÅŸik_yaygÄ±n) <= 0: bileÅŸik_bitti = True
		
		if soru_tÃ¼rÃ¼ == "random":
			random_int = ri(0,1)
		
			if not bileÅŸik_bitti and random_int == 0:
				sor = ri(0,len(bileÅŸik_yaygÄ±n)-1)
				if tahmin(bileÅŸik_yaygÄ±n[sor],bileÅŸik[sor]):
					bileÅŸik_yaygÄ±n.pop(sor)
					bileÅŸik.pop(sor)

			if not sembolik_bitti and random_int == 1:
				sor = ri(0,len(sembolik_yaygÄ±n)-1)
				if tahmin(sembolik_yaygÄ±n[sor],sembolik[sor]):
					sembolik_yaygÄ±n.pop(sor)
					sembolik.pop(sor)

		if not bileÅŸik_bitti and soru_tÃ¼rÃ¼ == "bileÅŸik":
			sor = ri(0,len(bileÅŸik_yaygÄ±n)-1)
			if tahmin(bileÅŸik_yaygÄ±n[sor],bileÅŸik[sor]):
				bileÅŸik_yaygÄ±n.pop(sor)
				bileÅŸik.pop(sor)
		
		if not sembolik_bitti and soru_tÃ¼rÃ¼ == "sembolik":
			sor = ri(0,len(sembolik_yaygÄ±n)-1)
			if tahmin(sembolik_yaygÄ±n[sor],sembolik[sor]):
				sembolik_yaygÄ±n.pop(sor)
				sembolik.pop(sor)
		
		if bileÅŸik_bitti and sembolik_bitti:
			print(f"puanÄ±n: {puan}\noyunu oynadÄ±ÄŸÄ±nÄ±z iÃ§in teÅŸekkÃ¼rler, umarÄ±m ezberlemenizde yardÄ±mcÄ± olmuÅŸumdur ve umarÄ±m eÄŸlenmiÅŸsinizdir.")
			exit(0)

if __name__ == '__main__':
	if sor:
		soru_turu_sor()
		soru_siralamasi_sor()
	init()

	oyunu_baslat()
